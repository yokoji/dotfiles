"------------------------------------------------------------------------------- 
" Plugin
"------------------------------------------------------------------------------- 
set nocompatible
filetype off

if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim/
  call neobundle#rc(expand('~/.vim/bundle/'))
endif

" color
NeoBundle 'tomasr/molokai'

" programming
NeoBundle 'vim-ruby/vim-ruby'
NeoBundle 'tpope/vim-rails'

" explorer
NeoBundle 'The-NERD-tree'
NeoBundle 'taglist.vim'
NeoBundle 'Source-Explorer-srcexpl.vim'
NeoBundle 'trinity.vim'

" syntax
NeoBundle 'scrooloose/syntastic'
NeoBundle 'kchmck/vim-coffee-script'
NeoBundle 'JavaScript-syntax'
NeoBundle 'jQuery'
NeoBundle 'haml.zip'
NeoBundle 'nginx.vim'

" completion
NeoBundle 'surround.vim'
NeoBundle 'Shougo/neocomplcache'

" search
NeoBundle 'matchit.zip'
NeoBundle 'ruby-matchit'
NeoBundle 'smartword'

" visual
NeoBundle 'nathanaelkane/vim-indent-guides'
NeoBundle 'Lokaltog/vim-powerline'

" utils
NeoBundle 'neobundle.vim'

filetype plugin indent on

"------------------------------------------------------------------------------- 
" Plugin Setting
"------------------------------------------------------------------------------- 
" syntastic
let g:syntastic_enable_signs = 1
let g:syntastic_enable_highlighting = 1

" vim-indent-guides
let g:indent_guides_auto_colors = 0
let g:indent_guides_start_level = 4
let g:indent_guides_guide_size  = 1
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red   ctermbg=3
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=4
if 'dark' == &background
    hi IndentGuidesOdd  ctermbg=black
    hi IndentGuidesEven ctermbg=darkgrey
else
    hi IndentGuidesOdd  ctermbg=white
    hi IndentGuidesEven ctermbg=lightgrey
endif

" taglist.Vim
let Tlist_Ctags_Cmd   = '/Applications/MacVim.app/Contents/MacOS/ctags'
let Tlist_Auto_Open   = 0
let Tlist_Auto_Update = 1

" srcexp
let g:SrcExpl_UpdateTags  = 1
let g:SrcExpl_RefreshTime = 0

" neocomplecache
let g:neocomplcache_enable_at_startup = 1
let g:neocomplcache_enable_smart_case = 1
let g:neocomplcache_enable_camel_case_completion = 1
let g:neocomplcache_enable_underbar_completion = 1
let g:neocomplcache_min_syntax_length = 3
let g:neocomplcache_enable_quick_match = 1
let g:neocomplcache_enable_auto_select = 1

inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><C-n>  pumvisible() ? "\<C-n>" : "\<C-x>\<C-u>\<C-p>"
inoremap <expr><C-p> pumvisible() ? "\<C-p>" : "\<C-p>\<C-n>"
inoremap <expr><CR>  pumvisible() ? neocomplcache#close_popup() : "<CR>"

autocmd FileType ruby set omnifunc=rubycomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags

